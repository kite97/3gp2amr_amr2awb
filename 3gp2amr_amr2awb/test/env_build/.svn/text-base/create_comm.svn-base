#!/usr/bin/python

"""create_comm:Automatically create common message config file"""

import sys
import os

config_xml_header = '<?xml version="1.0" encoding="UTF-8"?>\n'
config_root_s     = '<configuration>\n'
config_program_s  = '    <programs>\n'
config_fe         = '        <fe id="%d" name="%s" forward="%d" executable="%s" timeout="%d" />\n'
config_program_e  = '    </programs>\n'
config_process_s  = '    <processes>\n'
config_domain_s   = '        <domain id="%d" name="%s" host="%s">\n'
config_subnet     = '            <subnet name="%s" fe="%s" startinstance="%d" number="%d" initialnumber="%d" />\n'
config_domain_e   = '        </domain>\n'
config_process_e  = '    </processes>\n'
config_link_s     = '    <links>\n'
config_linkset    = '        <linkset domain1="%s" subnet1="%s" domain2="%s" subnet2="%s" startport="%d" />\n'
config_link_e     = '    </links>\n'
config_root_e     = '</configuration>\n'

fe_list = ({"name":"ininit",    "id":1,   "forward":0,  "executable":"ininit",    "timeout":15  },
           {"name":"msgr",      "id":11,  "forward":1,  "executable":"msgr",      "timeout":15  },
           {"name":"rcs",       "id":21,  "forward":0,  "executable":"rcpp",      "timeout":15  },
           {"name":"rps",       "id":27,  "forward":0,  "executable":"rppp",      "timeout":300 },
           {"name":"rms",       "id":31,  "forward":0,  "executable":"rmpp",      "timeout":15  },
           {"name":"ringmgr",   "id":41,  "forward":0,  "executable":"ringmgr",   "timeout":15  },
           {"name":"inaccessd", "id":63,  "forward":0,  "executable":"inaccessd", "timeout":15  })

def port_seq(port_base):
    while True:
        yield port_base
        port_base += 1

def gen(config, type):
    config['name'] = "%s%d.domain" % (type,config['id'])
    return config

def gen_config(configure, comm_type):

    [rcs_domain_list,
     rps_domain_list,
     rms_domain_list] = [[gen(c,t) for c in configure[t]]
                         for t in ['rcs','rps','rms']]
    # port base
    port_base = configure['port_base']

    ########################################################################
    #                  Start to Create config text                         #
    ########################################################################
    final_config = ""

    final_config += config_xml_header  # XML Header
    final_config += config_root_s      # XML Root Element Start

    #####
    ## START program settings

    final_config += config_program_s

    # config each fe
    for fe_inf in fe_list :
        final_config += config_fe%(fe_inf["id"],fe_inf["name"],fe_inf["forward"],fe_inf["executable"],fe_inf["timeout"])

    final_config += config_program_e
    final_config += "\n"

    ## END program settings
    #####


    #####
    ## START process settings

    final_config += config_process_s

    # config rcs domain
    for rcs_domain_inf in rcs_domain_list :
        final_config += config_domain_s%(rcs_domain_inf["id"],rcs_domain_inf["name"],rcs_domain_inf["host"])
        # config domain subnet
	rcpp_num = rcs_domain_inf['number']
        final_config += config_subnet%("ininit",    "ininit",    1,  1, 1)
        final_config += config_subnet%("msgr",      "msgr",      4,  1, 1)
        final_config += config_subnet%("rcs",       "rcs",       8,  rcpp_num, rcpp_num)
        #final_config += config_subnet%("inaccessd", "inaccessd", 16, 1, 1)
        final_config += config_domain_e
        final_config += "\n"
    # config rps domain
    for rps_domain_inf in rps_domain_list :
        final_config += config_domain_s%(rps_domain_inf["id"],rps_domain_inf["name"],rps_domain_inf["host"])
        # config domain subnet
        final_config += config_subnet%("ininit",    "ininit",    1,  1, 1)
        final_config += config_subnet%("msgr",      "msgr",      4,  1, 1)
        final_config += config_subnet%("rps",       "rps",       8,  1, 1)
        if rps_domain_inf['boardtype']==1 :
        	final_config += config_subnet%("ringmgr",   "ringmgr",   16, 1, 1)
        #final_config += config_subnet%("inaccessd", "inaccessd", 32, 1, 1)
        final_config += config_domain_e
        final_config += "\n"

    if (comm_type == "ms"):
        # config rms domain
        for rms_domain_inf in rms_domain_list :
            final_config += config_domain_s%(rms_domain_inf["id"],rms_domain_inf["name"],rms_domain_inf["host"])
            # config domain subnet
            final_config += config_subnet%("ininit",    "ininit",    1,  1, 1)
            final_config += config_subnet%("msgr",      "msgr",      4,  1, 1)
            final_config += config_subnet%("rms",       "rms",       8,  1, 1)
            #final_config += config_subnet%("inaccessd", "inaccessd", 16, 1, 1)
            final_config += config_domain_e

    final_config += config_process_e
    final_config += "\n"

    ## END process settings
    #####


    #####
    ## START link settings
    final_config += config_link_s
    ports = port_seq(port_base)
    # config rcs links
    for rcs_domain_inf in rcs_domain_list :
        rcs_ininit_port = ports.next()
        rcs_msgr_port   = ports.next()
        final_config += config_linkset%(rcs_domain_inf["name"], "ininit", rcs_domain_inf["name"], "msgr",      rcs_ininit_port)
        final_config += config_linkset%(rcs_domain_inf["name"], "ininit", rcs_domain_inf["name"], "rcs",       rcs_ininit_port)
        #final_config += config_linkset%(rcs_domain_inf["name"], "ininit", rcs_domain_inf["name"], "inaccessd", rcs_ininit_port)
        final_config += config_linkset%(rcs_domain_inf["name"], "msgr",   rcs_domain_inf["name"], "rcs",       rcs_msgr_port)
        #final_config += config_linkset%(rcs_domain_inf["name"], "msgr",   rcs_domain_inf["name"], "inaccessd", rcs_msgr_port)
        # add rps links
        for rps_domain_inf in rps_domain_list :
            final_config += config_linkset%(rcs_domain_inf["name"], "msgr",   rps_domain_inf["name"], "msgr",      rcs_msgr_port)

    # config rps links
    for rps_domain_inf in rps_domain_list :
        rps_ininit_port = ports.next()
        rps_msgr_port   = ports.next()
        final_config += "\n"
        final_config += config_linkset%(rps_domain_inf["name"], "ininit", rps_domain_inf["name"], "msgr",      rps_ininit_port)
        final_config += config_linkset%(rps_domain_inf["name"], "ininit", rps_domain_inf["name"], "rps",       rps_ininit_port)
        if rps_domain_inf['boardtype']==1 :
        	final_config += config_linkset%(rps_domain_inf["name"], "ininit", rps_domain_inf["name"], "ringmgr",   rps_ininit_port)
        #final_config += config_linkset%(rps_domain_inf["name"], "ininit", rps_domain_inf["name"], "inaccessd", rps_ininit_port)
        final_config += config_linkset%(rps_domain_inf["name"], "msgr",   rps_domain_inf["name"], "rps",       rps_msgr_port)
        if rps_domain_inf['boardtype']==1 :
        	final_config += config_linkset%(rps_domain_inf["name"], "msgr",   rps_domain_inf["name"], "ringmgr",   rps_msgr_port)
        #final_config += config_linkset%(rps_domain_inf["name"], "msgr",   rps_domain_inf["name"], "inaccessd", rps_msgr_port)

    if (comm_type == "ms"):
        # config rms links
        for rms_domain_inf in rms_domain_list :
            rms_ininit_port = ports.next()
            rms_msgr_port   = ports.next()
            final_config += "\n"
            final_config += config_linkset%(rms_domain_inf["name"], "ininit", rms_domain_inf["name"], "msgr",      rms_ininit_port)
            final_config += config_linkset%(rms_domain_inf["name"], "ininit", rms_domain_inf["name"], "rms",       rms_ininit_port)
            #final_config += config_linkset%(rms_domain_inf["name"], "ininit", rms_domain_inf["name"], "inaccessd", rms_ininit_port)
            final_config += config_linkset%(rms_domain_inf["name"], "msgr",   rms_domain_inf["name"], "rms",       rms_msgr_port)
            #final_config += config_linkset%(rms_domain_inf["name"], "msgr",   rms_domain_inf["name"], "inaccessd", rms_msgr_port)
            # add rcs links
            for rcs_domain_inf in rcs_domain_list :
                final_config += config_linkset%(rms_domain_inf["name"], "msgr",   rcs_domain_inf["name"], "msgr",      rms_msgr_port)
            # add rps links
            for rps_domain_inf in rps_domain_list :
                final_config += config_linkset%(rms_domain_inf["name"], "msgr",   rps_domain_inf["name"], "msgr",      rms_msgr_port)
            # add other RMSs
            if rms_domain_inf!=rms_domain_list[0] :
                final_config += config_linkset%(rms_domain_inf["name"], "msgr",   rms_domain_list[0]["name"], "msgr",  rms_msgr_port)

    final_config += config_link_e

    ## END link settings
    #####

    final_config += config_root_e # XML Root Element Stop
    return final_config

if __name__ == "__main__":
    if len(sys.argv) > 1:
        config_file = sys.argv[1]
    else:
        config_file = 'comm_config'
    exec(open(config_file,"r").read())
    print gen_config(configure, sys.argv[2])
